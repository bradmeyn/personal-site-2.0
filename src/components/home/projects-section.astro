---
import ProjectCard from "@/components/project-card.astro";
import { PROJECTS } from "@/constants/projects";
import LinkButton from "@/components/link-button.astro";
---

<section
  class="animate-fade-up opacity-0 [animation-delay:2s] [animation-fill-mode:forwards]"
>
  <h2 class="heading--secondary">Projects</h2>

  <div class="space-y-8">
    {
      PROJECTS.map((project, index) => (
        <div
          class="animate-fade-up opacity-0"
          style={`animation-delay: ${2.2 + index * 0.2}s; animation-fill-mode: forwards;`}
        >
          <ProjectCard {project} />
        </div>
      ))
    }
    <LinkButton
      href="https://github.com/bradmeyn?tab=repositories"
      text="View GitHub"
    />
  </div>
</section>

<script>
  // Auto-scrolling badges logic
  const badgeContainer = document.querySelector(".badges-container");
  let scrollInterval: null | NodeJS.Timeout;
  let isScrolling = false;

  function startScrolling() {
    if (isScrolling || !badgeContainer) return;

    scrollInterval = setInterval(() => {
      if (
        badgeContainer.scrollLeft >=
        badgeContainer.scrollWidth - badgeContainer.clientWidth
      ) {
        // Reset to beginning when reaching the end
        badgeContainer.scrollLeft = 0;
      } else {
        // Scroll by 1px for smooth movement
        badgeContainer.scrollLeft += 1;
      }
    }, 20); // Adjust speed by changing interval time

    isScrolling = true;
  }

  function stopScrolling() {
    if (!isScrolling || !scrollInterval) return;
    clearInterval(scrollInterval);
    isScrolling = false;
  }

  // Start scrolling when page loads
  document.addEventListener("DOMContentLoaded", () => {
    // Add some delay to let animations finish
    setTimeout(() => {
      startScrolling();
    }, 3000);
  });

  // Stop scrolling on hover, resume when not hovering
  badgeContainer?.addEventListener("mouseenter", stopScrolling);
  badgeContainer?.addEventListener("mouseleave", startScrolling);

  // Optional: Pause scrolling when window is not in focus
  document.addEventListener("visibilitychange", () => {
    if (document.hidden) {
      stopScrolling();
    } else {
      startScrolling();
    }
  });
</script>
