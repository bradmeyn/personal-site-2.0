---
import type { Project } from "../../../data/projects";
import TechBadge from "./TechBadge.astro";

interface Props {
  project: Project;
}

const { title, description, link, tech, repository } = Astro.props.project;
---

<article class="project animated--fade-in">
  <div class="project__text">
    <h3 class="project__heading">{title}</h3>
    <p class="project__description">
      {description}
    </p>

    <div class="project__badges">
      {tech.map((tech) => <TechBadge name={tech} />)}
    </div>
    <div class="project__links">
      <a class="project__link project__link--live" target="_blank" href={link}
        ><span>Live</span>
        <i class="fas fa-arrow-right"></i></a
      >
      <a
        class="project__link project__link--repo"
        target="_blank"
        href={repository}
        ><span>Repository</span>
        <i class="fas fa-arrow-right"></i></a
      >
    </div>
  </div>
</article>

<style>
  .project {
    position: relative;
    display: flex;
    gap: var(--sp-xl);
    flex-direction: column;
    justify-content: center;
    overflow: hidden;
    border-radius: 5px;
    padding: 1.5rem;
    background-image: var(--gradient-primary);
    max-width: 25rem;
  }

  .project__badges {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sp-sm);
    margin-bottom: var(--sp-lg);
  }

  .project__links {
    display: flex;
    justify-content: flex-start;
    gap: var(--sp-sm);
    align-items: center;
  }

  .project__link {
    border-radius: 50px;
    text-align: center;
    font-family: var(--font-primary);
    color: var(--primary-lightest);
    text-decoration: none;
    cursor: pointer;
    padding: 0.4rem 1rem;

    display: flex;
    align-items: center;
    flex-wrap: nowrap;
    font-size: var(--fs-md);
    font-weight: 500;
    gap: var(--sp-xs);
  }

  .fa-arrow-right {
    transition: all 0.3s ease;
    font-size: var(--fs-sm);
  }

  .project__link--live {
    color: #fff;
    background-image: var(--gradient-secondary);

    transition: background-image 0.3s ease-in-out;
    background-size: 200% auto;
    background-image: var(--gradient-secondary);
  }

  .project__link--repo {
    background-color: transparent;
    background-image: none;
  }
  /* Replace 768px with the actual pixel value for $screen-md */
  @media only screen and (min-width: 768px) {
    .project {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: start;
      flex-wrap: wrap;
      padding: 3rem;
      gap: var(--sp-xl);
      max-width: 100%;
    }

    .project__img,
    .project__text {
      flex: 1;
    }

    .project__img {
      min-width: 25rem;
      margin: 0 auto;
    }

    .project__text {
      min-width: 30rem;
    }

    .project:nth-of-type(even) .project__text {
      order: 2;
    }
  }

  @media (hover: hover) and (pointer: fine) {
    .project__link {
      transition: 0.5s;
    }

    .project__link:hover {
      background-position: right center;
    }

    .project__link:hover .fa-arrow-right {
      transform: translateX(3px);
      transform: rotate(-45deg);
      color: #fff;
    }

    .project__link--repo:hover span {
      color: #fff;
      box-shadow: inset 0 -2px 0 var(--secondary);
    }
  }
</style>
